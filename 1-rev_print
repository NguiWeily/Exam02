Assignment name  : rev_print
Expected files   : rev_print.c
Allowed functions: write
--------------------------------------------------------------------------------

Write a function that takes a string and displays the string in reverse
order followed by the newline.
Its prototype is constructed like this : 
  char *ft_rev_print (char *str)
It must return its argument

Examples:

$> ./rev_print "zaz" | cat -e
zaz$
$> ./rev_print "dub0 a POIL" | cat -e
LIOP a 0bud$
$> ./rev_print | cat -e
$

Certainly! Here's an implementation of the `ft_rev_print` function in C:

```c
#include <unistd.h>

char *ft_rev_print(char *str) {
    int len = 0;
    
    // Calculate the length of the string
    while (str[len] != '\0') {
        len++;
    }

    // Print the string in reverse order
    while (len > 0) {
        len--;
        write(1, &str[len], 1);
    }

    // Print a newline character
    write(1, "\n", 1);
    
    return str;
}
```

In this implementation, the `ft_rev_print` function takes a string `str` as input and prints the string in reverse order, followed by a newline character. It returns the input string as per the given prototype.

The function first calculates the length of the string by iterating through each character until it encounters the null terminator `'\0'`. It then uses a while loop to print the characters of the string in reverse order by starting from the last character and decrementing the index until reaching the first character. The `write` function is used to write each character to the standard output.

After printing the reversed string, the function prints a newline character using `write` to ensure a new line is displayed.

Finally, the function returns the input string as per the given prototype.

You can compile and run the program to test it with the provided examples.
