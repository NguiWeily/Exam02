Assignment name  : ft_atoi
Expected files   : ft_atoi.c
Allowed functions: None
--------------------------------------------------------------------------------

Write a function that converts the string argument str to an integer (type int)
and returns it.

It works much like the standard atoi(const char *str) function, see the man.

Your function must be declared as follows:

int	ft_atoi(const char *str);

Certainly! Here's an implementation of the `ft_atoi` function in C:

```c
int ft_atoi(const char* str) {
    int result = 0;
    int sign = 1;
    int i = 0;

    // Handle leading whitespaces
    while (str[i] == ' ' || str[i] == '\t' || str[i] == '\n'
           || str[i] == '\v' || str[i] == '\f' || str[i] == '\r') {
        i++;
    }

    // Handle sign
    if (str[i] == '-' || str[i] == '+') {
        sign = (str[i] == '-') ? -1 : 1;
        i++;
    }

    // Convert digits to integer
    while (str[i] >= '0' && str[i] <= '9') {
        result = result * 10 + (str[i] - '0');
        i++;
    }

    return result * sign;
}
```

Save the above code in a file named `ft_atoi.c`. You can then use this function in your program by including the declaration `int ft_atoi(const char* str);`. The function takes a string argument `str` and converts it to an integer.

Here's an example usage of the `ft_atoi` function:

```c
#include <stdio.h>

int main() {
    const char* str = "12345";
    int num = ft_atoi(str);
    printf("%d\n", num);  // Output: 12345

    return 0;
}
```

You can compile the code using a C compiler, and the output will be the converted integer value of the input string.
